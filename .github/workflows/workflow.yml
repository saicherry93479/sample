
name: Build, push, and deploy

on:
  push:
    branches:
      - main
      

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
      - name: Build container image
        run: docker build -t ${{ secrets.REGISTRY_NAME }}/python-example:$(echo $GITHUB_SHA | head -c7) .
      
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200
      
      - name: Push image to DigitalOcean Container Registry
        run: docker push ${{ secrets.REGISTRY_NAME }}/python-example:$(echo $GITHUB_SHA | head -c7)
      
      - name: Update deployment file
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/python-example:'${TAG}'|' $GITHUB_WORKSPACE/config/deployment.yml
      
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}
      
      - name: Check if development namespace exists
        run: |
          if ! kubectl get namespace development; then
            kubectl create namespace development
          fi
      
      - name: Deploy to development namespace
        run: kubectl apply -f $GITHUB_WORKSPACE/config/deployment.yml -n development
      
      - name: Verify deployment
        run: kubectl rollout status deployment/flaskdevelopment -n development
        
      - name: Delete previous image from DigitalOcean Container Registry
        run: |
          IMAGE_NAME=${{ secrets.REGISTRY_NAME }}/python-example
          IMAGE_TAG=$(echo $GITHUB_SHA | head -c7)
          PREVIOUS_TAG=$(doctl registry repository list-tags $IMAGE_NAME --format Tag --no-header | grep -v $IMAGE_TAG | tail -n 1)
          if [ -n "$PREVIOUS_TAG" ]; then
            doctl registry repository delete $IMAGE_NAME:$PREVIOUS_TAG --force
          fi

